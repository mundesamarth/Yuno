datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String    // Required for credentials
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  transactions  Transaction[]
  goals         Goal[]
  
  @@map("users")
}

model Category {
  id           String        @id @default(cuid())
  name         String
  type         TransactionType
  color        String        @default("#6366f1")
  icon         String        @default("circle")
  isDefault    Boolean       @default(false)
  transactions Transaction[]
  
  @@map("categories")
}

model Transaction {
  id              String          @id @default(cuid())
  userId          String
  categoryId      String
  amount          Float
  description     String?
  transactionDate DateTime
  type            TransactionType
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id])
  
  @@map("transactions")
}

model Goal {
  id            String     @id @default(cuid())
  userId        String
  name          String
  targetAmount  Float
  currentAmount Float      @default(0)
  targetDate    DateTime?
  status        GoalStatus @default(ACTIVE)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("goals")
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum GoalStatus {
  ACTIVE
  COMPLETED
  PAUSED
}